#!/bin/bash

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
MAGENTA='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color
BOLD='\033[1m'

# Detect if script is being sourced
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    SOURCED=false
    set -e  # Exit on error (only when not sourced)
else
    SOURCED=true
fi

# Check if branch name is provided
if [ -z "$1" ]; then
    echo -e "${RED}Error: Branch name is required${NC}"
    echo -e "${YELLOW}Usage: make-worktree <branch-name>${NC}"
    echo -e "${YELLOW}   or: . make-worktree <branch-name> (to auto-cd)${NC}"
    echo -e "${YELLOW}Example: make-worktree feat/ogn-tracker-type${NC}"
    if [ "$SOURCED" = true ]; then
        return 1
    else
        exit 1
    fi
fi

BRANCH_NAME="$1"
WORKTREE_DIR="$HOME/soar-worktrees/$BRANCH_NAME"

# Check for .env file
ENV_FILE=""
if [ -f ".env" ]; then
    ENV_FILE=".env"
elif [ -f "$HOME/soar/.env" ]; then
    ENV_FILE="$HOME/soar/.env"
else
    echo -e "${RED}Error: .env file not found in current directory or $HOME/soar/.env${NC}"
    if [ "$SOURCED" = true ]; then
        return 1
    else
        exit 1
    fi
fi

echo -e "${BOLD}${CYAN}Creating worktree for branch: ${MAGENTA}$BRANCH_NAME${NC}"
echo -e "${CYAN}Location: ${NC}$WORKTREE_DIR"
echo ""

# Create the worktree
echo -e "${BLUE}[1/4]${NC} ${BOLD}Creating git worktree...${NC}"
git worktree add -b "$BRANCH_NAME" "$WORKTREE_DIR" main
echo -e "${GREEN}✓ Worktree created${NC}"
echo ""

# Copy .env file
echo -e "${BLUE}[2/4]${NC} ${BOLD}Copying .env file...${NC}"
cp "$ENV_FILE" "$WORKTREE_DIR/.env"
echo -e "${GREEN}✓ .env file copied${NC}"
echo ""

# Run npm install in the web directory
echo -e "${BLUE}[3/4]${NC} ${BOLD}Installing npm dependencies...${NC}"
cd "$WORKTREE_DIR/web"
npm install
echo -e "${GREEN}✓ npm dependencies installed${NC}"
echo ""

# Build Rust project to pre-cache artifacts
echo -e "${BLUE}[4/4]${NC} ${BOLD}Building Rust project (pre-caching artifacts)...${NC}"
cd "$WORKTREE_DIR"
cargo build
echo -e "${GREEN}✓ Cargo build complete${NC}"
echo ""

echo -e "${GREEN}${BOLD}✓ Worktree setup complete!${NC}"
echo ""

# If sourced, automatically cd into the worktree
if [ "$SOURCED" = true ]; then
    echo -e "${YELLOW}Changing directory to worktree...${NC}"
    cd "$WORKTREE_DIR"
    echo -e "${GREEN}✓ Now in: ${CYAN}$(pwd)${NC}"

    # Run mise trust if mise is installed
    if command -v mise &> /dev/null; then
        echo -e "${BLUE}Running mise trust...${NC}"
        mise trust
        echo -e "${GREEN}✓ mise trust complete${NC}"
    fi
else
    echo -e "${YELLOW}To start working:${NC}"
    echo -e "  ${CYAN}cd $WORKTREE_DIR${NC}"
    echo ""
    echo -e "${YELLOW}Tip: Use ${CYAN}. make-worktree <branch>${YELLOW} to auto-cd into the worktree${NC}"
fi

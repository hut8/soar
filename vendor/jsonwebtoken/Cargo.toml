# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2024"
rust-version = "1.85.0"
name = "jsonwebtoken"
version = "10.1.0"
authors = ["Vincent Prouillet <hello@vincentprouillet.com>"]
build = false
include = [
    "src/**/*",
    "benches/**/*",
    "tests/**/*",
    "LICENSE",
    "README.md",
    "CHANGELOG.md",
]
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Create and decode JWTs in a strongly typed way."
homepage = "https://github.com/Keats/jsonwebtoken"
readme = "README.md"
keywords = [
    "jwt",
    "api",
    "token",
    "jwk",
]
license = "MIT"
repository = "https://github.com/Keats/jsonwebtoken"

[package.metadata.docs.rs]
features = ["rust_crypto"]

[badges.maintenance]
status = "passively-maintained"

[features]
aws_lc_rs = ["aws-lc-rs"]
default = ["use_pem"]
rust_crypto = [
    "ed25519-dalek",
    "hmac",
    "p256",
    "p384",
    "rand",
    "rsa",
    "sha2",
]
use_pem = [
    "pem",
    "simple_asn1",
]

[lib]
name = "jsonwebtoken"
path = "src/lib.rs"

[[test]]
name = "dangerous"
path = "tests/dangerous.rs"

[[test]]
name = "hmac"
path = "tests/hmac.rs"

[[test]]
name = "lib"
path = "tests/lib.rs"

[[bench]]
name = "jwt"
path = "benches/jwt.rs"
harness = false

[dependencies.aws-lc-rs]
version = "1.10.0"
optional = true

[dependencies.base64]
version = "0.22"

[dependencies.ed25519-dalek]
version = "2.1.1"
features = ["pkcs8"]
optional = true

[dependencies.hmac]
version = "0.12.1"
optional = true

[dependencies.p256]
version = "0.13.2"
features = ["ecdsa"]
optional = true

[dependencies.p384]
version = "0.13.0"
features = ["ecdsa"]
optional = true

[dependencies.pem]
version = "3"
optional = true

[dependencies.rand]
version = "0.8.5"
features = ["std"]
optional = true
default-features = false

[dependencies.rsa]
version = "0.9.6"
optional = true

[dependencies.serde]
version = "1.0"
features = ["derive"]

[dependencies.serde_json]
version = "1.0"

[dependencies.sha2]
version = "0.10.7"
features = ["oid"]
optional = true

[dependencies.signature]
version = "2.2.0"
features = ["std"]

[dependencies.simple_asn1]
version = "0.6"
optional = true

[dev-dependencies.ed25519-dalek]
version = "2.1.1"
features = [
    "pkcs8",
    "rand_core",
]

[dev-dependencies.rand]
version = "0.8.5"
features = ["std"]
default-features = false

[dev-dependencies.rand_core]
version = "0.6.4"

[dev-dependencies.wasm-bindgen-test]
version = "0.3.1"

[target.'cfg(all(target_arch = "wasm32", not(any(target_os = "emscripten", target_os = "wasi"))))'.dev-dependencies.criterion]
version = "0.4"
default-features = false

[target.'cfg(all(target_arch = "wasm32", not(any(target_os = "emscripten", target_os = "wasi"))))'.dev-dependencies.time]
version = "0.3"
features = ["wasm-bindgen"]

[target.'cfg(not(all(target_arch = "wasm32", not(any(target_os = "emscripten", target_os = "wasi")))))'.dev-dependencies.criterion]
version = "0.4"

[target.'cfg(not(all(target_arch = "wasm32", not(any(target_os = "emscripten", target_os = "wasi")))))'.dev-dependencies.time]
version = "0.3"

[target.'cfg(target_arch = "wasm32")'.dependencies.getrandom]
version = "0.2"

[target.'cfg(target_arch = "wasm32")'.dependencies.js-sys]
version = "0.3"
